spring:
  datasource:
    url: jdbc:h2:mem:paymentdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

server:
  port: 8080

# Actuator management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans,threaddump,heapdump,loggers,prometheus
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
    instances:
      paymentService:
        baseConfig: default

# Gateway external endpoints (used by PaytmGateway and RazorpayGateway)
# These can be overridden per-environment. If left as defaults, the gateways
# will fallback to the local banking system simulation when remote calls fail.
gateways:
  paytm:
    url: http://localhost:8081/paytm/process
    apiKey: "" # set the Paytm API key if required
  razorpay:
    url: http://localhost:8082/razorpay/process
    apiKey: "" # set the Razorpay API key (Bearer token) if required
